{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOption.module.css","Components/App.module.css","Components/Section/Section.module.css","Components/Notification/Notification.module.css","Components/Section/Section.js","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Notification/Notification.js","Components/App.js","index.js"],"names":["module","exports","Section","title","children","className","s","mainTitle","Statistics","props","List","Object","keys","map","data","TitleList","FeedbackOptions","options","onLeaveFeedback","buttonContainer","option","type","button","onClick","Notification","message","App","useState","good","setGood","neutral","setNeutral","bad","setBad","visibleStatistics","setVisibleStatistics","container","event","target","textContent","toLowerCase","prev","total","countTotalFeedback","positivePercentage","toFixed","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,UAAY,8BAA8B,KAAO,2B,gBCAnED,EAAOC,QAAU,CAAC,gBAAkB,wCAAwC,OAAS,iC,iBCArFD,EAAOC,QAAU,CAAC,UAAY,yB,gBCA9BD,EAAOC,QAAU,CAAC,UAAY,6B,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,gC,2HCGfC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,qCACE,oBAAIC,UAAWC,IAAEC,UAAjB,SAA6BJ,IAC5BC,M,gBCJMI,EAAa,SAAAC,GACxB,OACE,oBAAIJ,UAAWC,IAAEI,KAAjB,SACGC,OAAOC,KAAKH,GAAOI,KAAI,SAAAC,GACtB,OACE,oBAAIT,UAAWC,IAAES,UAAjB,SACE,8BACGD,EADH,IACU,IACR,iCACGL,EAAMK,GACG,uBAATA,GAAiC,WALPA,S,gBCL9BE,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OACE,mCACE,qBAAKb,UAAWC,IAAEa,gBAAlB,SACGF,EAAQJ,KAAI,SAAAO,GACX,OACE,wBAEEC,KAAK,SACLhB,UAAWC,IAAEgB,OACbC,QAASL,EAJX,SAMGE,GALIA,W,gBCPNI,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,mBAAGpB,UAAWC,IAAEmB,QAAhB,SAA0BA,KCEtBC,EAAM,WACjB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAAkDN,mBAAS,SAA3D,mBAAOO,EAAP,KAA0BC,EAA1B,KA8BA,OACE,sBAAK9B,UAAWC,IAAE8B,UAAlB,UACE,cAAC,EAAD,CAASjC,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEc,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAjCe,SAAAmB,GAKrB,OAJAF,GAAqB,GACFE,EAAXC,OACaC,YAAYC,eAG/B,IAAK,OACHX,GAAQ,SAAAY,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHV,GAAW,SAAAU,GAAI,OAAIA,EAAO,KAC1B,MACF,IAAK,MACHR,GAAO,SAAAQ,GAAI,OAAIA,EAAO,WAwBxB,cAAC,EAAD,CAAStC,MAAO,aAAhB,SACG+B,EACC,cAAC,EAAD,CACEN,KAAMA,EACNE,QAASA,EACTE,IAAKA,EACLU,MAxBiB,SAACd,EAAME,EAASE,GACzC,OAAOJ,EAAOE,EAAUE,EAuBTW,CAAmBf,EAAME,EAASE,GACzCY,mBArB8B,SAAChB,EAAME,EAASE,GACtD,IAAMU,EAAQd,EAAOE,EAAUE,EAC/B,OAAkB,IAAVU,EAAc,EAAKd,EAAOc,EAAS,KAAKG,UAmBpBC,CAClBlB,EACAE,EACAE,KAIJ,cAAC,EAAD,CAAcP,QAAS,kCC5DjCsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.382f5336.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TitleList\":\"Statistics_TitleList__3uONo\",\"List\":\"Statistics_List__abnWb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"FeedbackOption_buttonContainer__2sEy5\",\"button\":\"FeedbackOption_button__Hw3Ac\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2zcql\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"Section_mainTitle__3Q38V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__20Ujb\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <>\n      <h2 className={s.mainTitle}>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport const Statistics = props => {\n  return (\n    <ul className={s.List}>\n      {Object.keys(props).map(data => {\n        return (\n          <li className={s.TitleList} key={data}>\n            <p>\n              {data}:{' '}\n              <span>\n                {props[data]}\n                {data === 'positivePercentage' && '%'}\n              </span>\n            </p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOption.module.css';\n\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      <div className={s.buttonContainer}>\n        {options.map(option => {\n          return (\n            <button\n              key={option}\n              type=\"button\"\n              className={s.button}\n              onClick={onLeaveFeedback}\n            >\n              {option}\n            </button>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport const Notification = ({ message }) => {\n  return <p className={s.message}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport s from './App.module.css';\nimport { Section } from './Section/Section';\nimport { Statistics } from './Statistics/Statistics';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Notification } from './Notification/Notification';\n\nexport const App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [visibleStatistics, setVisibleStatistics] = useState('false');\n\n  const handelBtnClick = event => {\n    setVisibleStatistics(true);\n    const { target } = event;\n    const value = target.textContent.toLowerCase();\n\n    switch (value) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n      default:\n    }\n  };\n\n  const countTotalFeedback = (good, neutral, bad) => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = (good, neutral, bad) => {\n    const total = good + neutral + bad;\n    return (total === 0 ? 0 : (good / total) * 100).toFixed();\n  };\n\n  return (\n    <div className={s.container}>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={handelBtnClick}\n        />\n      </Section>\n\n      <Section title={'Statistics'}>\n        {visibleStatistics ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback(good, neutral, bad)}\n            positivePercentage={countPositiveFeedbackPercentage(\n              good,\n              neutral,\n              bad,\n            )}\n          />\n        ) : (\n          <Notification message={'>> No feedback given <<'} />\n        )}\n      </Section>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}